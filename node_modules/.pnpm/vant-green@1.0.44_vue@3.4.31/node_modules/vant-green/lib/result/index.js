"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _utils = require("../utils");

var _icon = _interopRequireDefault(require("../icon"));

var _createNamespace = (0, _utils.createNamespace)('result'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  props: {
    type: String,
    inline: Boolean,
    icon: String,
    title: String,
    tip: String,
    color: String,
    textColor: String
  },
  computed: {
    genTitle: function genTitle() {
      return this.title || (this.type === 'fail' ? '操作失败' : this.type === 'success' ? '操作成功' : '');
    },
    genIcon: function genIcon() {
      return this.icon || (this.type === 'fail' ? 'warning' : this.type === 'success' ? 'checked' : '');
    },
    genIconColor: function genIconColor() {
      return this.color || (this.type === 'fail' ? '#ff5f4e' : this.type === 'success' ? '#32AE57' : '');
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "attrs": {
        "role": "result"
      },
      "class": [bem({
        inline: this.inline
      }), 'van-clearfix']
    }, [this.slots('icon') || h(_icon.default, {
      "class": bem('icon'),
      "attrs": {
        "color": this.genIconColor,
        "name": this.genIcon
      }
    }), h("div", {
      "class": bem('title'),
      "style": {
        color: this.textColor
      }
    }, [this.genTitle]), this.tip && h("div", {
      "class": [bem('tip'), 'van-multi-ellipsis--l2']
    }, [this.tip]), this.slots('default')]);
  }
});

exports.default = _default;