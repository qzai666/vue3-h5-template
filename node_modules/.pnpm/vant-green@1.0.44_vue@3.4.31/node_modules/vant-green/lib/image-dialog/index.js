"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _utils = require("../utils");

var _overlay = _interopRequireDefault(require("../overlay"));

var _icon = _interopRequireDefault(require("../icon"));

var _button = _interopRequireDefault(require("../button"));

var _createNamespace = (0, _utils.createNamespace)('image-dialog'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  props: {
    show: Boolean,
    imgUrl: String,
    title: String,
    content: String,
    buttonText: String
  },
  methods: {
    close: function close() {
      this.$emit('close');
    },
    confirm: function confirm() {
      this.$emit('confirm');
    }
  },
  render: function render() {
    var h = arguments[0];
    var closeIcon = h(_icon.default, {
      "attrs": {
        "role": "button",
        "tabindex": "0",
        "name": "close"
      },
      "class": bem('close-icon'),
      "on": {
        "click": this.close
      }
    });
    var image = this.slots('image') || this.imgUrl && h("img", {
      "class": bem('image'),
      "attrs": {
        "src": this.imgUrl
      }
    });
    var body = (this.content || this.title || this.buttonText) && h("div", {
      "class": bem('body')
    }, [this.title && h("div", {
      "class": bem('title')
    }, [this.title]), this.content && h("div", {
      "class": bem('content')
    }, [this.content]), this.buttonText && h(_button.default, {
      "attrs": {
        "type": "primary",
        "block": true
      },
      "class": bem('button'),
      "on": {
        "click": this.confirm
      }
    }, [this.buttonText])]);
    return h(_overlay.default, {
      "attrs": {
        "show": this.show
      },
      "class": bem()
    }, [h("div", {
      "class": bem('wrapper')
    }, [closeIcon, h("div", {
      "class": bem('content-wrapper')
    }, [image, body, this.slots()])])]);
  }
});

exports.default = _default;