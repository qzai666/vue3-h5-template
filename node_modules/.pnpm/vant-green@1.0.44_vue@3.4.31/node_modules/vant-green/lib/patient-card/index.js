"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _utils = require("../utils");

var _icon = _interopRequireDefault(require("../icon"));

var _createNamespace = (0, _utils.createNamespace)('patient-card'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  props: {
    type: String,
    org: String,
    cardName: String,
    patientName: String,
    default: Boolean,
    codeUrl: String,
    IDNumber: String,
    infoList: Array,
    unbound: Boolean,
    incomplete: Boolean,
    upgrade: Boolean,
    mask: Boolean,
    backgroundImg: String
  },
  data: function data() {
    return {
      showMask: true
    };
  },
  methods: {
    clickCard: function clickCard() {
      this.$emit('clickCard');
    },
    clickBind: function clickBind(e) {
      e.stopPropagation();
      this.$emit('clickBind');
    },
    clickMask: function clickMask(e) {
      e.stopPropagation();
      this.$emit('clickMask');
    },
    closeMask: function closeMask(e) {
      e.stopPropagation();
      this.showMask = false;
    }
  },
  computed: {
    backImgUrl: function backImgUrl() {
      var backgroundImg = '';

      if (this.type == 'healthCard') {
        backgroundImg = this.backgroundImg ? this.backgroundImg : 'http://mui.ucmed.cn/images/back/healthcard@2x.png';
      } else {
        backgroundImg = 'http://mui.ucmed.cn/images/back/visitcard@3x.png';
      }

      return "background-image: url(" + backgroundImg + ")";
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": bem([this.type]),
      "on": {
        "click": this.clickCard
      },
      "style": this.backImgUrl
    }, [this.mask && h("div", {
      "class": bem('mask'),
      "on": {
        "click": this.clickMask
      }
    }), this.type !== 'healthCard' && this.upgrade && this.showMask && h("div", {
      "class": bem('mask', ['upgrade']),
      "on": {
        "click": this.clickMask
      }
    }, [h("span", {
      "class": bem('close'),
      "on": {
        "click": this.closeMask
      }
    }, [h(_icon.default, {
      "attrs": {
        "name": "cross",
        "size": 14
      }
    })]), "\u8BF7\u70B9\u51FB\u5C06\u5361\u7247\u5347\u7EA7\u4E3A\u5065\u5EB7\u5361"]), this.type === 'healthCard' && this.incomplete && h("div", {
      "class": bem('mask'),
      "on": {
        "click": this.clickMask
      }
    }, [h("span", {
      "class": bem('complete')
    }, ["\u5B8C\u5584\u5065\u5EB7\u5361\u4FE1\u606F"])]), h("div", {
      "class": bem('header')
    }, [h("div", {
      "class": bem('header-left')
    }, [h("p", {
      "class": bem('org')
    }, [this.org]), this.type === 'healthCard' && this.unbound && h("span", {
      "class": bem('unbound'),
      "on": {
        "click": this.clickBind
      }
    }, ["\u672A\u7ED1\u5B9A\u9662\u5185\u5C31\u8BCA\u5361"])]), this.type !== 'healthCard' && h("div", {
      "class": bem('header-right')
    }, [h("van-icon", {
      "attrs": {
        "name": "health-card",
        "size": 25,
        "color": "#0B5A2C"
      }
    }), h("span", {
      "class": bem('card-name')
    }, [this.cardName])])]), h("div", {
      "class": bem('content')
    }, [this.slots('default') || h("div", {
      "class": bem('wrapper')
    }, [h("p", {
      "class": bem('patient')
    }, [h("span", {
      "class": bem('patient-name')
    }, [this.patientName]), this.default && h("i", {
      "class": bem('default')
    }, ["\u9ED8\u8BA4"])]), this.IDNumber && h("p", {
      "class": bem('id-number')
    }, [this.IDNumber]), this.patientName && !this.IDNumber && (!this.infoList || this.infoList.length == 0) && h("p", {
      "class": bem('empty-box')
    }), !this.IDNumber && this.infoList && this.infoList.length > 0 && h("div", {
      "class": bem('info-list')
    }, [this.infoList.map(function (item) {
      return item.value && h("p", {
        "class": bem('info-item')
      }, [h("span", {
        "class": bem('info-item-key')
      }, [item.key]), h("span", {
        "class": bem('info-item-value')
      }, [item.value])]);
    })])]), h("div", {
      "class": bem('wrapper')
    }, [this.codeUrl && h("div", {
      "class": bem('code-div')
    }, [h("img", {
      "attrs": {
        "src": this.codeUrl
      },
      "class": bem('code')
    })])])])]);
  }
});

exports.default = _default;