import { createNamespace, addUnit } from '../utils';
import { BORDER_BOTTOM } from '../utils/constant';
import Icon from '../icon';

var _createNamespace = createNamespace('cascade-select'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

export default createComponent({
  props: {
    length: {
      type: Number,
      default: 4
    },
    placeholder: {
      type: String,
      default: '请选择'
    },
    list: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    dataKey: String,
    height: {
      type: [Number, String],
      default: 300
    }
  },
  data: function data() {
    return {
      selectList: [],
      titleList: [],
      lineStyle: {}
    };
  },
  mounted: function mounted() {
    this.setLine();
  },
  methods: {
    onClickItem: function onClickItem(item, index) {
      var content = {
        columnIndex: this.titleList.length,
        index: index,
        item: item
      };

      if (this.titleList.length < this.length) {
        this.selectList.push(content);
        this.titleList.push(item);
        this.$emit('clickItem', {
          columnIndex: this.titleList.length - 1,
          index: index,
          item: item
        });
      }

      if (this.titleList.length === this.length) {
        this.$emit('confirm', this.selectList);
        this.close();
      }
    },
    close: function close() {
      this.selectList = [];
      this.titleList = [];
      this.$emit('close');
    },
    setLine: function setLine() {
      var _this = this;

      this.$nextTick(function () {
        var getPlaceholder = document.getElementById('line');
        var width = getPlaceholder.offsetWidth;
        var left = getPlaceholder.offsetLeft + width / 2;
        var lineStyle = {
          // width: addUnit(width + 7),
          transform: "translateX(" + left + "px) translateX(-50%)"
        };
        _this.lineStyle = lineStyle;
      });
    }
  },
  render: function render() {
    var _this2 = this;

    var h = arguments[0];
    var genTitle = this.titleList.length > 0 && h("div", {
      "class": bem('title')
    }, [this.titleList.map(function (item) {
      return h("div", {
        "class": bem('title-text')
      }, [_this2.dataKey ? item[_this2.dataKey] : item]);
    })]);
    var genHeader = h("div", {
      "class": [bem('header'), BORDER_BOTTOM]
    }, [genTitle, h("div", {
      "class": bem('placeLine')
    }, [h("div", {
      "class": bem('placeholder'),
      "attrs": {
        "id": "line"
      }
    }, [this.placeholder]), h("div", {
      "class": bem('line'),
      "style": this.lineStyle
    })]), h(Icon, {
      "attrs": {
        "name": "cross"
      },
      "class": bem('close'),
      "on": {
        "click": this.close
      }
    })]);
    var genList = this.list.map(function (item, index) {
      return h("li", {
        "class": bem('item'),
        "on": {
          "click": function click() {
            _this2.onClickItem(item, index);
          }
        }
      }, [_this2.dataKey ? item[_this2.dataKey] : item, _this2.slots()]);
    });
    return h("div", {
      "class": bem()
    }, [genHeader, h("ul", {
      "class": bem('wrapper'),
      "style": {
        height: addUnit(this.height - 48)
      }
    }, [genList])]);
  }
});