import _extends from "@babel/runtime/helpers/esm/extends";
import { createNamespace } from '../utils';
import { ChildrenMixin } from '../mixins/relation';

var _createNamespace = createNamespace('swipe-item'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

export default createComponent({
  mixins: [ChildrenMixin('vanSwipe')],
  props: {
    default: String
  },
  data: function data() {
    return {
      offset: 0
    };
  },
  beforeCreate: function beforeCreate() {
    this.$parent.swipes.push(this);
  },
  destroyed: function destroyed() {
    this.$parent.swipes.splice(this.$parent.swipes.indexOf(this), 1);
  },
  render: function render() {
    var h = arguments[0];
    var _this$parent = this.parent,
        vertical = _this$parent.vertical,
        computedWidth = _this$parent.computedWidth,
        computedHeight = _this$parent.computedHeight,
        active = _this$parent.active,
        count = _this$parent.count,
        type = _this$parent.type;
    var scale = '';

    if (type === 'card') {
      if (this.index !== active) {
        scale = 'scale(0.85)';
      }

      if (this.index === 0 && active === count) {
        scale = '';
      }
    }

    var style = {
      width: computedWidth + 'px',
      height: vertical ? computedHeight + 'px' : '100%',
      transform: "translate" + (vertical ? 'Y' : 'X') + "(" + this.offset + "px) " + scale,
      backgroundImage: this.default && this.default !== '1' && this.default !== '2' ? "url(" + this.default : ''
    };
    return h("div", {
      "class": bem([{
        default1: this.default === '1',
        default2: this.default === '2'
      }, type]),
      "style": style,
      "on": _extends({}, this.$listeners)
    }, [this.slots()]);
  }
});